# !/usr/bin/env python3
# _*_ coding:utf-8 _*_
"""
@File     : conv3d_sample.py
@Project  : PyTorchSample
@Time     : 2021/12/3 9:36
@Author   : aaron-wu
@Contact_1: no5aaron@163.com
@Contact_2: wuhao@insta360.com
@Software : PyCharm
@Last Modify Time      @Version     @Desciption
--------------------       --------        -----------
2021/12/3 9:36        1.0             None
"""
import torch

torch.set_printoptions(precision=4, sci_mode=False)


class Conv3DModel(torch.nn.Module):
    def __init__(self, in_channels, out_channels, kernel_size=3, padding=1):
        super(Conv3DModel, self).__init__()
        self.conv3d = torch.nn.Conv3d(in_channels=in_channels, out_channels=out_channels, kernel_size=kernel_size,
                                      padding=padding)
        self.weight = torch.nn.Parameter(torch.Tensor([[[[[0.0148, 0.1108, 0.0833],
                                                          [0.0437, -0.0316, -0.0130],
                                                          [-0.1158, 0.0322, -0.0458]],

                                                         [[-0.0777, 0.1306, -0.0235],
                                                          [-0.1146, -0.0338, 0.0717],
                                                          [-0.0358, -0.0852, 0.1358]],

                                                         [[-0.0073, -0.0742, -0.0733],
                                                          [0.1293, 0.1324, 0.0786],
                                                          [0.0792, 0.1014, -0.1220]]],

                                                        [[[0.1287, -0.0806, 0.0969],
                                                          [0.0374, 0.0331, -0.0724],
                                                          [-0.1121, 0.0335, -0.1344]],

                                                         [[-0.0425, -0.0188, 0.1026],
                                                          [-0.1016, 0.0789, -0.1167],
                                                          [-0.1149, -0.0734, -0.0137]],

                                                         [[-0.0437, -0.0246, 0.0148],
                                                          [0.0289, 0.1027, 0.0534],
                                                          [-0.1306, 0.1177, -0.0287]]]],

                                                       [[[[0.0159, -0.0385, -0.0868],
                                                          [0.1357, -0.0652, -0.0082],
                                                          [-0.0964, 0.0666, 0.1070]],

                                                         [[-0.0773, 0.1273, 0.0255],
                                                          [0.0918, 0.1019, 0.1065],
                                                          [-0.0237, 0.0344, -0.0798]],

                                                         [[0.1290, -0.0773, -0.0007],
                                                          [0.0354, -0.0833, 0.0800],
                                                          [-0.0402, 0.0703, 0.1105]]],

                                                        [[[-0.1116, 0.0569, 0.0332],
                                                          [-0.0183, -0.1222, 0.0622],
                                                          [-0.0288, -0.0853, -0.0767]],

                                                         [[0.0105, -0.0368, 0.0683],
                                                          [0.0413, -0.0763, 0.0124],
                                                          [0.0435, 0.1156, -0.0293]],

                                                         [[0.1344, -0.0026, 0.0607],
                                                          [-0.0333, 0.1151, -0.0282],
                                                          [0.0887, -0.0438, 0.1158]]]],

                                                       [[[[0.0505, -0.0617, 0.0534],
                                                          [-0.1067, -0.0138, -0.0057],
                                                          [0.0984, 0.0508, -0.1296]],

                                                         [[0.1198, -0.0401, 0.0134],
                                                          [0.0315, 0.1073, -0.0239],
                                                          [-0.0171, 0.1054, -0.0164]],

                                                         [[0.0988, 0.1219, -0.0088],
                                                          [0.1079, 0.0745, -0.0074],
                                                          [-0.0433, -0.0208, 0.0826]]],

                                                        [[[0.1025, -0.0780, 0.0352],
                                                          [-0.0048, 0.0285, 0.0189],
                                                          [-0.0005, 0.1350, -0.0796]],

                                                         [[0.1038, -0.0873, -0.1277],
                                                          [0.0759, 0.0743, -0.0106],
                                                          [0.1119, -0.1313, 0.0694]],

                                                         [[-0.1263, 0.0559, 0.0247],
                                                          [-0.1081, -0.0488, 0.0519],
                                                          [-0.0390, -0.0243, 0.0826]]]],

                                                       [[[[0.1306, -0.0132, 0.0519],
                                                          [0.0283, -0.1003, -0.1341],
                                                          [0.1035, 0.0764, -0.0036]],

                                                         [[0.0354, 0.0787, -0.1001],
                                                          [0.0339, 0.0690, -0.0957],
                                                          [0.1331, 0.0512, -0.0060]],

                                                         [[-0.1070, -0.0033, -0.0731],
                                                          [-0.0697, -0.1325, 0.1153],
                                                          [0.0197, 0.0193, 0.0454]]],

                                                        [[[-0.0701, -0.0909, -0.0819],
                                                          [-0.0936, -0.0051, 0.0214],
                                                          [-0.0203, 0.1033, 0.1078]],

                                                         [[0.1355, 0.0665, 0.0161],
                                                          [0.0182, -0.0632, -0.0343],
                                                          [0.1124, 0.0666, 0.0011]],

                                                         [[-0.1227, -0.1220, -0.1047],
                                                          [-0.1146, 0.0995, 0.0951],
                                                          [-0.0430, 0.1124, -0.0278]]]]]))
        self.bias = torch.nn.Parameter(torch.Tensor([0.0120, -0.0104, -0.0267, 0.0152]))
        self.conv3d.weight = self.weight
        self.conv3d.bias = self.bias

    def forward(self, x):
        y = self.conv3d(x)
        return y


if __name__ == '__main__':
    N = 1
    C = 2
    D = 3
    H = 4
    W = 4
    # input_data = torch.randn(N, C, D, H, W)
    input_data = torch.Tensor([[[[[-0.7932, 2.4321, 0.0637, -0.4720],
                                  [0.0226, 0.0862, -0.6992, 0.9766],
                                  [0.5793, -0.8382, -0.2175, 0.8473],
                                  [-0.1035, 2.2405, 1.6605, -0.5414]],

                                 [[1.6806, 0.2003, 0.4645, -0.4300],
                                  [-1.5504, 0.3764, 1.4385, 1.3375],
                                  [-0.4558, 0.6160, -0.8035, 1.2687],
                                  [1.1023, -0.1308, -0.8731, -0.9811]],

                                 [[-0.2629, 0.4746, -0.5862, 0.5464],
                                  [0.7505, 0.5210, -0.2518, 1.4507],
                                  [0.5926, -0.1340, -1.3873, 0.0803],
                                  [0.5536, 1.4215, 0.7764, -0.3433]]],

                                [[[-0.7481, -1.7959, 0.4001, 1.0373],
                                  [-0.0043, 0.4523, 1.5205, 1.2470],
                                  [-0.0192, 0.4941, 0.4697, -0.4880],
                                  [0.3149, 0.2813, -0.2804, -0.0743]],

                                 [[0.7062, -0.1173, 1.5354, -0.1380],
                                  [0.5673, 2.9599, -0.2510, 0.8631],
                                  [-0.6965, 0.9290, -0.2999, 0.9968],
                                  [1.2393, -1.6203, -0.1799, -0.1299]],

                                 [[0.4772, 1.3508, -0.1827, 0.3575],
                                  [0.5808, 0.3754, -0.4300, -0.1269],
                                  [-0.4508, -0.7323, 0.5261, 0.2068],
                                  [-0.7043, -0.4302, -0.1138, -0.9379]]]]])

    print("input_data: ", input_data.shape)
    print(input_data)

    conv3d_net = Conv3DModel(in_channels=C, out_channels=4, kernel_size=3, padding=1)

    torch_output = conv3d_net(input_data)
    print("conv3d output: ", torch_output.shape)
    print(torch_output)

    model_name = './Conv3DModel.onnx'
    torch.onnx.export(conv3d_net, input_data, model_name, input_names=["input"], output_names=["output"],
                      opset_version=11)

    pass
